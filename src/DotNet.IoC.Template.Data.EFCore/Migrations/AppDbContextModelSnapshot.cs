// <auto-generated />
using System;
using DotNet.IoC.Template.Data.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNet.IoC.Template.Data.EFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IsoCode");

                    b.Property<string>("IsoCodeAlias")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IsoCodeAlias");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NameAlias");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasMaxLength(2040)
                        .HasColumnType("nvarchar(2040)")
                        .HasColumnName("Observations");

                    b.HasKey("Id");

                    b.HasIndex("IsoCode")
                        .IsUnique();

                    b.HasIndex("IsoCodeAlias")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("NameAlias")
                        .IsUnique();

                    b.ToTable("Countries", (string)null);
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NameAlias");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasMaxLength(2040)
                        .HasColumnType("nvarchar(2040)")
                        .HasColumnName("Observations");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NameAlias");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasMaxLength(2040)
                        .HasColumnType("nvarchar(2040)")
                        .HasColumnName("Observations");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Teams", (string)null);
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.TeamsPlayers", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamId");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("PlayerId");

                    b.Property<DateTime>("ContractStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("ContractStart");

                    b.Property<DateTime?>("ContractEnd")
                        .HasColumnType("datetime2")
                        .HasColumnName("ContractEnd");

                    b.HasKey("TeamId", "PlayerId", "ContractStart");

                    b.HasIndex("PlayerId");

                    b.ToTable("TeamsPlayers", (string)null);
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.Player", b =>
                {
                    b.HasOne("DotNet.IoC.Template.Domain.Models.Country", "Country")
                        .WithMany("Players")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DotNet.IoC.Template.Domain.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Country");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.Team", b =>
                {
                    b.HasOne("DotNet.IoC.Template.Domain.Models.Country", "Country")
                        .WithMany("Teams")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.TeamsPlayers", b =>
                {
                    b.HasOne("DotNet.IoC.Template.Domain.Models.Player", "Player")
                        .WithMany("TeamsPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DotNet.IoC.Template.Domain.Models.Team", "Team")
                        .WithMany("TeamsPlayers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.Country", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.Player", b =>
                {
                    b.Navigation("TeamsPlayers");
                });

            modelBuilder.Entity("DotNet.IoC.Template.Domain.Models.Team", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("TeamsPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
